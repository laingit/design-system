// Lightning Design System 2.3.0-alpha.5
// Copyright (c) 2015, salesforce.com, inc. All rights reserved.

// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
// Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
// Neither the name of salesforce.com, inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/**
 * Multi Select picklists that allow for draggable options between picklists. Picklist options can also be re-ordered.
 *
 * #### Accessibility
 * This component is essentially 2 ARIA listboxes side by side, so we follow the [ARIA practices guide](https://www.w3.org/TR/wai-aria-practices/#Listbox) to help implement their interaction in an accessible way. Some additional details, supplementary to the ARIA guide include:
 *
 * - *Notable attributes**
 * - `aria-multiselectable="true"` should be set on each listbox
 * - `aria-selected` should be placed on each `role="option`, and only set to `true` when selected
 * - `aria-labelledby` is used to identify the list to the user and should point to the list label
 * - `aria-describedby` is used to provide operation instructions for the Drag and Drop interaction
 *
 * - *Keyboard navigation**
 * - Each list is a tab stop. This provides identification and operation instruction as provided by `aria-describedby` and `aria-labelledby`. State of the overall list is also provided, including total number and number of selected options in the list when focused.
 * - Because we support drag and drop re-ordering, we implement the second multi-select keyboard model.
 *   - Up and Down arrows move focus _and_ selection, with `aria-selected="true"`
 *   - `shift + up` and `shift + down` moved focus and creates addition selections
 *   - `ctrl + down` or `ctrl + up` moves focus but selection remains where it is
 *   - `ctrl + space` toggles selection on the focused option, in addition to previous selections
 *   - `ctrl + a` selects all options in the list
 *   - `cmd/ctrl + right` and `cmd/ctrl + left` Moves selected items between lists
 *   - `space` toggles "Drag and Drop" mode. When in "Drag and Drop" mode:
 *     - Up and Down arrows move the selected items _within_ the current list
 *
 * - *Updating Operation and State**
 * - As a user interacts with the component, pay close attention to the content of the `aria-live` region and the `option-drag-label` assistive text. This is to provide clear instruction to the user on how to proceed, and what has happened in each State the component will be in
 *
 * @summary Multi Select listbox that allow for draggable options between listboxes. Listbox options can also be re-ordered.
 *
 * @base
 * @name multi-select
 * @selector .slds-picklist--draggable
 * @support prototype
 * @category complex
 * @type data-entry
 * @role listbox
 */

/**
 * @name base
 * @selector .slds-picklist--draggable
 * @restrict .slds-picklist
 * @variant
 */
.slds-picklist_draggable,
.slds-picklist--draggable {

  .slds-button {
    margin: $spacing-xx-small;

    &:first-of-type {
      margin-top: $spacing-large;
    }
  }
}

.slds-picklist__options {
  border: $border-width-thin solid $color-border-input {
    radius: $border-radius-medium;
  };
  padding: $spacing-xx-small 0;
  width: $size-small;
  height: $size-small;
  background-color: $color-background-input-active;

  &_multi,
  &--multi {
    overflow: auto;
  }
}

.slds-picklist__item {
  position: relative;
  line-height: $line-height-text;

  > a,
  > span {
    display: block;
    padding: $spacing-x-small $spacing-small;

    &:hover {
      background-color: $color-background-row-hover;
      cursor: pointer;
    }

    &:active {
      background-color: $color-background-row-active;
    }
  }

  &[aria-selected="true"] {
    background-color: $color-background-row-active;
  }
}
