// Lightning Design System 2.3.0-alpha.5
// Copyright (c) 2015, salesforce.com, inc. All rights reserved.

// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
// Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
// Neither the name of salesforce.com, inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/**
 * @summary A styled checkable input group that communicates if an option(s) are true, false or indeterminate
 *
 * @base
 * @name checkbox-button-group
 * @selector .slds-checkbox--button-group
 * @support dev-ready
 * @category complex
 * @type data-entry
 * @role checkbox
 */

/**
 * @summary Initializes checkbox button group
 *
 * @name base
 * @selector .slds-checkbox--button-group
 * @restrict span
 * @required
 * @variant
 */
.slds-checkbox_button-group,
.slds-checkbox--button-group {
  display: inline-flex;
  border: $border-width-thin solid $color-border;
  border-radius: $border-radius-medium;
}

/**
 * Initializes checkbox inside a button group
 *
 * @selector .slds-checkbox--button
 * @restrict .slds-checkbox--button-group button
 * @required
 */
.slds-checkbox_button,
.slds-checkbox--button {
  display: flex;
  border: 0;
  border-radius: 0;
  background-clip: padding-box;

  /**
   * Creates a custom styled checkbox
   *
   * @selector .slds-checkbox--faux
   * @restrict .slds-checkbox--button__label span
   * @required
   */
  .slds-checkbox_faux,
  .slds-checkbox--faux {
    @include button;
    position: relative;
    background-color: $color-background-button-default;
    transition: border $duration-quickly linear, background-color $duration-quickly linear;

    &:hover,
    &:focus {
      cursor: pointer;
      background-color: $color-background-button-default-hover;
    }
  }

  /**
   * Creates a custom styled checkbox
   *
   * @selector .slds-checkbox--button__label
   * @restrict .slds-checkbox--button label
   * @required
   */
  .slds-checkbox_button__label .slds-checkbox_faux,
  .slds-checkbox--button__label .slds-checkbox--faux,
  [type="checkbox"]:checked + .slds-checkbox--button__label .slds-checkbox--faux {
    background-color: transparent;
  }

  // Apply left borders to anything checkbox button
  // after the first button
  + .slds-checkbox_button,
  + .slds-checkbox--button {
    border-left: $border-width-thin solid $color-border;
    border-radius: 0;
    margin: 0;
  }

  // Dealing with box shadows on specific n children
  // of the button group
  &:first-child > .slds-checkbox_faux,
  &:first-child > .slds-checkbox--faux,
  &:first-child > .slds-checkbox_button__label,
  &:first-child > .slds-checkbox--button__label {
    border-radius: $border-radius-medium 0 0 $border-radius-medium;
  }

  &:last-child > .slds-checkbox_faux,
  &:last-child > .slds-checkbox--faux,
  .slds-button_last > .slds-checkbox_faux,
  .slds-button--last > .slds-checkbox--faux,
  &:last-child > .slds-checkbox_button__label,
  &:last-child > .slds-checkbox--button__label {
    border-radius: 0 $border-radius-medium $border-radius-medium 0;
  }

  // Hide input and style checkbox--faux
  [type="checkbox"] {
    @include square(1px);
    border: 0;
    clip: rect(0 0 0 0);
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;

    // Checked State with Interactions
    &:checked + .slds-checkbox_faux,
    &:checked + .slds-checkbox--faux,
    &:checked ~ .slds-checkbox_faux,
    &:checked ~ .slds-checkbox--faux,
    &:checked + .slds-checkbox_button__label,
    &:checked + .slds-checkbox--button__label {
      background-color: $color-background-button-brand;
      color: $color-text-button-brand;

      // Need something stronger when the input is checked
      &:hover,
      &:focus {
        background-color: $color-background-button-brand;
      }
    }

    // Focus State
    &:focus + .slds-checkbox_faux,
    &:focus + .slds-checkbox--faux,
    &:focus ~ .slds-checkbox_faux,
    &:focus ~ .slds-checkbox--faux,
    &:focus + .slds-checkbox_button__label,
    &:focus + .slds-checkbox--button__label {
      @include focus-button;
      z-index: $z-index-default; // Raises box shadow above adjacent buttons
    }

    // Disabled State
    &[disabled] +.slds-checkbox_faux,
    &[disabled] +.slds-checkbox--faux,
    &[disabled] ~ .slds-checkbox_faux,
    &[disabled] ~ .slds-checkbox--faux,
    &[disabled] + .slds-checkbox_button__label,
    &[disabled] + .slds-checkbox--button__label {
      background-color: $color-background-button-default-disabled;
      color: $color-text-button-default-disabled;
      cursor: default;
    }
  }
}
